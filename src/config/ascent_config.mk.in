
###############################################################################
# Copyright (c) Lawrence Livermore National Security, LLC and other Ascent
# Project developers. See top-level LICENSE AND COPYRIGHT files for dates and
# other details. No copyright assignment is required to contribute to Ascent.
###############################################################################

###############################################################################
# file: ascent_config.mk
###############################################################################
#
# A CMake-generated Make include file Defines the following Make variables:
#
######
#  ASCENT_INCLUDE_FLAGS
#  ASCENT_LIB_FLAGS
#  ASCENT_MPI_LIB_FLAGS
######
#
#
# For use in another Makefile build system
############################################################################


ASCENT_DIR = @ASCENT_INSTALL_PREFIX@

ASCENT_CONDUIT_DIR = @CONDUIT_DIR@

# optional built in libs
ASCENT_APCOMP_ENABLED = @ASCENT_APCOMP_ENABLED@
ASCENT_DRAY_ENABLED   = @ASCENT_DRAY_ENABLED@
ASCENT_VTKH_ENABLED   = @ASCENT_VTKH_ENABLED@

# thirdparty libs
ASCENT_VTKH_DIR      = @ASCENT_VTKH_DIR@
ASCENT_VTKM_DIR      = @ASCENT_VTKM_DIR@
ASCENT_VTKM_VERSION  = @ASCENT_VTKM_VERSION@
ASCENT_MFEM_DIR      = @ASCENT_MFEM_DIR@
ASCENT_DRAY_DIR      = @ASCENT_DRAY_DIR@
ASCENT_OCCA_DIR      = @ASCENT_OCCA_DIR@
ASCENT_UMPIRE_DIR    = @ASCENT_UMPIRE_DIR@
ASCENT_FIDES_DIR     = @ASCENT_FIDES_DIR@
ASCENT_ADIOS2_DIR    = @ASCENT_ADIOS2_DIR@
ASCENT_BABELFLOW_DIR = @ASCENT_BABELFLOW_DIR@
ASCENT_PMT_DIR       = @ASCENT_PMT_DIR@
ASCENT_GENTEN_DIR    = @ASCENT_GENTEN_DIR@


ASCENT_OPENMP_LINK_FLAGS = @OpenMP_CXX_FLAGS@

ASCENT_MPI_LIBS =@ASCENT_CONFIG_MK_MPI_LINK_FLAGS@

ASCENT_PYTHON_LIBS =@ASCENT_CONFIG_MK_PYTHON_LINK_FLAGS@
ASCENT_PYTHON_LIB_DIR=@ASCENT_CONFIG_MK_PYTHON_LIB_DIR@

ASCENT_CUDA_LIBS = @CUDA_cudadevrt_LIBRARY@ @CUDA_cudart_static_LIBRARY@ @ASCENT_CUDA_MAKE_EXTRA_LIBS@

# include vars from conduit_config.mk
include $(ASCENT_CONDUIT_DIR)/share/conduit/conduit_config.mk

# setup rpath helper
ASCENT_LINK_RPATH = -Wl,-rpath,$(ASCENT_DIR)/lib $(CONDUIT_LINK_RPATH)


# two steps are used b/c there are commas in the linker commands
# which will undermine parsing of the makefile

# in some cases full path to python lib is used instead of lib dir
# + lib. For rpath, make sure python lib dir is set otherwise we will
# get a malformed rpath command and the linker will be unhappy.
ifeq ($(ASCENT_PYTHON_LIB_DIR),)
   # not set, do not include config.mk
else
   ASCENT_PYTHON_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_PYTHON_LIB_DIR)
endif

ASCENT_OCCA_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_OCCA_DIR)/lib
ASCENT_UMPIRE_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_UMPIRE_DIR)/lib
ASCENT_VTKH_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_VTKH_DIR)/lib
ASCENT_VTKM_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_VTKM_DIR)/lib
ASCENT_MFEM_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_MFEM_DIR)/lib
ASCENT_FIDES_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_FIDES_DIR)/lib
ASCENT_ADIOS2_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_ADIOS2_DIR)/lib
ASCENT_BABELFLOW_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_BABELFLOW_DIR)/lib
ASCENT_PMT_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_PMT_DIR)/lib
ASCENT_GENTEN_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_GENTEN_DIR)/lib

ASCENT_LINK_RPATH += $(if $(ASCENT_PYTHON_LIBS), $(ASCENT_PYTHON_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_OCCA_DIR), $(ASCENT_OCCA_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_UMPIRE_DIR), $(ASCENT_UMPIRE_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_VTKH_DIR), $(ASCENT_VTKH_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_VTKM_DIR), $(ASCENT_VTKM_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_MFEM_DIR), $(ASCENT_MFEM_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_FIDES_DIR), $(ASCENT_FIDES_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_ADIOS2_DIR), $(ASCENT_ADIOS2_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_BABELFLOW_DIR), $(ASCENT_BABELFLOW_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_PMT_DIR), $(ASCENT_PMT_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_GENTEN_DIR), $(ASCENT_GENTEN_RPATH_FLAGS_VALUE))


#################
# Linking Flags
#################

#### CUDA
ifeq ($(ASCENT_CUDA_LIBS),)
   # not set, do not include config.mk
else
    ASCENT_CUDA_LIB_FLAGS = $(ASCENT_CUDA_LIBS)
endif

##########
# Conduit
##########

# Note: Conduit's conduit_config.mk handles hdf5 and zlib

# For Conduit without MPI
ASCENT_CONDUIT_LIB_FLAGS = $(CONDUIT_LIB_FLAGS)

# For using Conduit build with MPI
ASCENT_CONDUIT_MPI_LIB_FLAGS = $(CONDUIT_MPI_LIB_FLAGS)

##########
# VTKH
##########

# only provide lib flags if VTK-h support is enabled
ifeq ($(ASCENT_VTKH_DIR),)
   # not set, do not include config.mk
else
    # If using VTKH without mpi
    ASCENT_VTKH_LIB_FLAGS=-L $(ASCENT_VTKH_DIR)/lib \
                          -lvtkh_rendering \
                          -lvtkh_compositing \
                          -lvtkh_filters \
                          -lvtkh_core \
                          -lvtkh_utils \
                          -lvtkh_lodepng

    # If using VTKH with mpi
    ASCENT_VTKH_MPI_LIB_FLAGS=-L $(ASCENT_VTKH_DIR)/lib \
                              -lvtkh_rendering_mpi \
                              -lvtkh_compositing_mpi \
                              -lvtkh_filters_mpi \
                              -lvtkh_core_mpi \
                              -lvtkh_lodepng \
                              -lvtkh_utils_mpi
endif

##########
#VTKM
##########

# only provide lib flags if VTK-m support is enabled
ifeq ($(ASCENT_VTKM_DIR),)
   # not set, do not include in config.mk
else
    ASCENT_VTKM_LIB_FLAGS = -L $(ASCENT_VTKM_DIR)/lib \
                            -lvtkm_rendering-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_clean_grid-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_contour-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_connected_components-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_density_estimate-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_entity_extraction-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_field_conversion-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_field_transform-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_geometry_refinement-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_image_processing-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_mesh_info-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_vector_analysis-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_extra-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_core-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_worklet-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_source-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_io-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_lodepng-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_cont-$(ASCENT_VTKM_VERSION) \
                            -lvtkmdiympi_nompi

# vtk-m cuda extras
ifeq ($(ASCENT_CUDA_LIBS),)
   # not set, do not include config.mk
else
    ASCENT_DEVICE_OBJECT = $(ASCENT_DIR)/lib/bcal_vtkm.o
    ASCENT_DEVICE_OBJECT_MPI = $(ASCENT_DIR)/lib/bcal_vtkm_mpi.o
endif

endif



##########
# MFEM
##########
# Include make vars from the mfem config.mk file
ifeq ($(ASCENT_MFEM_DIR),)
   # not set, do not include config.mk
else
   include $(ASCENT_MFEM_DIR)/share/mfem/config.mk
endif

##########
# DRay (EXTERNAL)
##########
# Include make vars from the dray config.mk file
ifeq ($(ASCENT_DRAY_DIR),)
   # not set, do not include config
else
   include $(ASCENT_DRAY_DIR)/share/dray/dray_config.mk
   ASCENT_LINK_RPATH += $(DRAY_LINK_RPATH)
endif

# MFEM isn't in the interface, so we don't need include flags
ASCENT_MFEM_LIB_FLAGS = $(if $(ASCENT_MFEM_DIR),-L $(ASCENT_MFEM_DIR)/lib -lmfem $(MFEM_EXT_LIBS))

# if we build mfem w/ mpi support (which we do to support laghos) serial static builds need to
# link mpi, or fail due to unresolved symbols
#
# If mfem was built with MPI support, add ASCENT_MPI_LIBS to avoid errors with static serial builds
ASCENT_MFEM_LIB_FLAGS += $(if $(MFEM_USE_MPI), $(ASCENT_MPI_LIBS) )


##########
# Dray (builtin)
##########
# (builtin lib installed by ascent)
# Include make vars from the dray_config.mk file
ifeq ($(ASCENT_DRAY_ENABLED),TRUE)
   include $(ASCENT_DIR)/share/ascent/dray_config.mk
   ASCENT_LINK_RPATH += $(DRAY_LINK_RPATH)
endif

##########
# VTK-h (builtin)
##########
# (builtin lib installed by ascent)
# Include make vars from the vtkh_config.mk file
ifeq ($(ASCENT_VTKH_ENABLED),TRUE)
   include $(ASCENT_DIR)/share/ascent/vtkh_config.mk
   ASCENT_LINK_RPATH += $(VTKH_LINK_RPATH)

   ifeq ($(ASCENT_CUDA_LIBS),)
      # not set, do not include config.mk
   else
       ASCENT_DEVICE_OBJECT = $(ASCENT_DIR)/lib/bcal_vtkm.o
       ASCENT_DEVICE_OBJECT_MPI = $(ASCENT_DIR)/lib/bcal_vtkm_mpi.o
   endif  
endif

##########
# OCCA
##########
ASCENT_OCCA_LIB_FLAGS = $(if $(ASCENT_OCCA_DIR),-L $(ASCENT_OCCA_DIR)/lib -locca)


##########
# UMPIRE
##########
ASCENT_UMPIRE_LIB_FLAGS = $(if $(ASCENT_UMPIRE_DIR),-L $(ASCENT_UMPIRE_DIR)/lib -lumpire)


##########
# FIDES + ADIOS2 (mpi only)
##########

#!!!!!
# Note: This does not handle ADIOS2 transitive deps, so it may not work for static builds
#!!!!!

ASCENT_FIDES_LIB_FLAGS = $(if $(ASCENT_FIDES_DIR),-L $(ASCENT_FIDES_DIR)/lib -lfides)
ifeq ($(ASCENT_ADIOS2_DIR),)
   # not set, do not include in config.mk
else
    ASCENT_ADIOS2_LIB_FLAGS = -L $(ASCENT_ADIOS2_DIR)/lib \
                                -ladios2_cxx11_mpi \
                                -ladios2_cxx11     \
                                -ladios2_core_mpi  \
                                -ladios2_core   \
                                -ladios2_perfstubs \
                                -ladios2_evpath    \
                                -ladios2_ffs       \
                                -ladios2_atl       \
                                -ladios2_dill
endif


##########
# BABELFLOW + PMT (mpi only)
##########
ASCENT_BABELFLOW_LIB_FLAGS = $(if $(ASCENT_BABELFLOW_DIR),-L $(ASCENT_BABELFLOW_DIR)/lib -lbabelflow_mpi)
ASCENT_PMT_LIB_FLAGS = $(if $(ASCENT_PMT_DIR),-L $(ASCENT_PMT_DIR)/lib -lpmt)


##########
# GENTEN
##########

#!!!!!
# Note: This does not handle Kokkos or BLAS transitive deps, so it may not work for static builds
#!!!!!

ASCENT_GENTEN_LIB_FLAGS = $(if $(ASCENT_GENTEN_DIR),-L $(ASCENT_GENTEN_DIR)/lib -lgt_higher_moments -lgentenlib -lgenten_mathlibs_c)

# -lopenblas (blas lib may change)
# -lkokkoscontainers
# -lkokkoscore



#######################
# Ascent Include Flags
#######################

# vtk, apcomp, and dray are not in ascent interface, they are not needed here

ASCENT_INCLUDE_FLAGS = $(CONDUIT_INCLUDE_FLAGS) \
                       -I $(ASCENT_DIR)/include/ascent


####################
# Ascent Lib Flags
####################
# if using Ascent without mpi
ASCENT_LIB_FLAGS = $(ASCENT_DEVICE_OBJECT) \
                   -L $(ASCENT_DIR)/lib \
                   -lascent \
                   -lascent_flow \
                   -lascent_lodepng \
                   -lrover $(DRAY_LIB_FLAGS) $(ASCENT_VTKH_LIB_FLAGS)  $(ASCENT_VTKM_LIB_FLAGS) $(VTKH_LIB_FLAGS) $(ASCENT_CONDUIT_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_OCCA_LIB_FLAGS) $(ASCENT_GENTEN_LIB_FLAGS) $(ASCENT_UMPIRE_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)

# if using Ascent with mpi and/or cuda with a non-GPU sim
ASCENT_MPI_LIB_FLAGS = $(ASCENT_DEVICE_OBJECT_MPI) \
                       -L $(ASCENT_DIR)/lib \
                       -lascent_mpi \
                       -lascent_flow \
                       -lascent_lodepng \
                       -lrover_mpi $(DRAY_MPI_LIB_FLAGS) $(ASCENT_VTKH_MPI_LIB_FLAGS)  $(ASCENT_VTKM_LIB_FLAGS) $(VTKH_MPI_LIB_FLAGS) $(ASCENT_CONDUIT_MPI_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_FIDES_LIB_FLAGS) $(ASCENT_ADIOS2_LIB_FLAGS) $(ASCENT_PMT_LIB_FLAGS) $(ASCENT_BABELFLOW_LIB_FLAGS) $(ASCENT_OCCA_LIB_FLAGS) $(ASCENT_GENTEN_LIB_FLAGS) $(ASCENT_UMPIRE_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)

# if using Ascent with mpi and/or cuda where the linking code
# performs a device link (resolving all cuda symbols)
ASCENT_MPI_CUDA_LIB_FLAGS = -L $(ASCENT_DIR)/lib \
                            -lascent_mpi \
                            -lascent_flow \
                            -lascent_lodepng \
                            -lrover_mpi $(DRAY_MPI_LIB_FLAGS) $(ASCENT_VTKH_MPI_LIB_FLAGS) $(ASCENT_VTKM_LIB_FLAGS) $(VTKH_MPI_LIB_FLAGS) $(ASCENT_CONDUIT_MPI_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_OCCA_LIB_FLAGS) $(ASCENT_GENTEN_LIB_FLAGS) $(ASCENT_FIDES_LIB_FLAGS) $(ASCENT_ADIOS2_LIB_FLAGS) $(ASCENT_PMT_LIB_FLAGS) $(ASCENT_BABELFLOW_LIB_FLAGS) $(ASCENT_UMPIRE_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)
