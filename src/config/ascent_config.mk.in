###############################################################################
# Copyright (c) 2015-2018, Lawrence Livermore National Security, LLC.
#
# Produced at the Lawrence Livermore National Laboratory
#
# LLNL-CODE-716457
#
# All rights reserved.
#
# This file is part of Ascent.
#
# For details, see: http://ascent.readthedocs.io/.
#
# Please also read ascent/LICENSE
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the disclaimer below.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the disclaimer (as noted below) in the
#   documentation and/or other materials provided with the distribution.
#
# * Neither the name of the LLNS/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
###############################################################################

###############################################################################
# file: ascent_config.mk
###############################################################################
#
# A CMake-generated Make include file Defines the following Make variables:
#
######
#  ASCENT_INCLUDE_FLAGS
#  ASCENT_LIB_FLAGS
#  ASCENT_MPI_LIB_FLAGS
######
#
# For us in another Makefile build system
############################################################################


ASCENT_DIR = @ASCENT_INSTALL_PREFIX@

ASCENT_CONDUIT_DIR = @CONDUIT_DIR@

ASCENT_VTKH_DIR = @VTKH_DIR@
ASCENT_VTKM_DIR = @VTKM_DIR@
ASCENT_VTKM_VERSION = @VTKm_VERSION@

ASCENT_MFEM_DIR = @MFEM_DIR@

ASCENT_DRAY_DIR = @DRAY_DIR@

ASCENT_OPENMP_LINK_FLAGS = @OpenMP_CXX_FLAGS@

ASCENT_MPI_LIBS =@ASCENT_CONFIG_MK_MPI_LINK_FLAGS@

ASCENT_PYTHON_LIBS =@ASCENT_CONFIG_MK_PYTHON_LINK_FLAGS@
ASCENT_PYTHON_LIB_DIR=@ASCENT_CONFIG_MK_PYTHON_LIB_DIR@

ASCENT_CUDA_LIBS = @CUDA_cudadevrt_LIBRARY@ @CUDA_cudart_static_LIBRARY@

# include vars from conduit_config.mk
include $(ASCENT_CONDUIT_DIR)/share/conduit/conduit_config.mk

# setup rpath helper
ASCENT_LINK_RPATH = -Wl,-rpath,$(ASCENT_DIR)/lib $(CONDUIT_LINK_RPATH)

# two steps are used b/c there are commas in the linker commands
# which will undermine parsing of the makefile
ASCENT_PYTHON_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_PYTHON_LIB_DIR)
ASCENT_VTKH_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_VTKH_DIR)/lib
ASCENT_VTKM_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_VTKM_DIR)/lib
ASCENT_MFEM_RPATH_FLAGS_VALUE = -Wl,-rpath,$(ASCENT_MFEM_DIR)/lib

ASCENT_LINK_RPATH += $(if $(ASCENT_PYTHON_LIBS), $(ASCENT_PYTHON_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_VTKH_DIR), $(ASCENT_VTKH_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_VTKM_DIR), $(ASCENT_VTKM_RPATH_FLAGS_VALUE))
ASCENT_LINK_RPATH += $(if $(ASCENT_MFEM_DIR), $(ASCENT_MFEM_RPATH_FLAGS_VALUE))

#################
# Linking Flags
#################

##########
# Conduit
##########

# Note: Conduit's conduit_config.mk handles hdf5 and zlib

# For Conduit without MPI
ASCENT_CONDUIT_LIB_FLAGS = $(CONDUIT_LIB_FLAGS)

# For using Conduit build with MPI
ASCENT_CONDUIT_MPI_LIB_FLAGS = $(CONDUIT_MPI_LIB_FLAGS)

##########
# VTKH
##########

# only provide lib flags if VTK-h support is enabled
ifeq ($(ASCENT_VTKH_DIR),)
   # not set, do not include config.mk
else
    # If using VTKH without mpi
    ASCENT_VTKH_LIB_FLAGS=-L $(ASCENT_VTKH_DIR)/lib \
                          -lvtkh_rendering \
                          -lvtkh_compositing \
                          -lvtkh_filters \
                          -lvtkh_core \
                          -lvtkh_lodepng \
                          -lvtkh_utils

    # If using VTKH with mpi
    ASCENT_VTKH_MPI_LIB_FLAGS=-L $(ASCENT_VTKH_DIR)/lib \
                              -lvtkh_rendering_mpi \
                              -lvtkh_compositing_mpi \
                              -lvtkh_filters_mpi \
                              -lvtkh_core_mpi \
                              -lvtkh_lodepng \
                              -lvtkh_utils_mpi
endif

##########
#VTKM
##########

# only provide lib flags if VTK-m support is enabled
ifeq ($(ASCENT_VTKM_DIR),)
   # not set, do not include config.mk
else
    ASCENT_VTKM_LIB_FLAGS = -L $(ASCENT_VTKM_DIR)/lib \
                            -lvtkm_rendering-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_contour-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_gradient-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_extra-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_filter_common-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_worklet-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_source-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_io-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_lodepng-$(ASCENT_VTKM_VERSION) \
                            -lvtkm_cont-$(ASCENT_VTKM_VERSION) \
                            -lvtkmdiympi_nompi

ifeq ($(ASCENT_CUDA_LIBS),)
   # not set, do not include config.mk
else
    ASCENT_DEVICE_OBJECT = $(ASCENT_DIR)/lib/bcal_vtkm.o
    ASCENT_DEVICE_OBJECT_MPI = $(ASCENT_DIR)/lib/bcal_vtkm_mpi.o
    ASCENT_CUDA_LIB_FLAGS = $(ASCENT_CUDA_LIBS)
endif

endif

##########
# MFEM
##########
# Include make vars from the mfem config.mk file
ifeq ($(ASCENT_MFEM_DIR),)
   # not set, do not include config.mk
else
   include $(ASCENT_MFEM_DIR)/share/mfem/config.mk
endif

##########
# MFEM
##########
# Include make vars from the mfem config.mk file
ifeq ($(ASCENT_DRAY_DIR),)
   # not set, do not include config
else
   include $(ASCENT_DRAY_DIR)/share/dray/dray_config.mk
   ASCENT_LINK_RPATH += $(DRAY_LINK_RPATH)
endif

# MFEM isn't in the interface, so we don't need include flags
ASCENT_MFEM_LIB_FLAGS = $(if $(ASCENT_MFEM_DIR),-L $(ASCENT_MFEM_DIR)/lib -lmfem $(MFEM_EXT_LIBS))

# if we build mfem w/ mpi support (which we do to support laghos) serial static builds need to
# link mpi, or fail due to unresolved symbols
#
# If mfem was built with MPI support, add ASCENT_MPI_LIBS to avoid errors with static serial builds
ASCENT_MFEM_LIB_FLAGS += $(if $(MFEM_USE_MPI), $(ASCENT_MPI_LIBS) )


#######################
# Ascent Include Flags
#######################
ASCENT_INCLUDE_FLAGS = $(CONDUIT_INCLUDE_FLAGS) \
                       -I $(ASCENT_DIR)/include/ascent


####################
# Ascent Lib Flags
####################
# if using Ascent without mpi
ASCENT_LIB_FLAGS = $(ASCENT_DEVICE_OBJECT) \
                   -L $(ASCENT_DIR)/lib \
                   -lascent \
                   -lascent_flow \
                   -lascent_lodepng \
                   -lrover $(DRAY_LIB_FLAGS) $(ASCENT_VTKH_LIB_FLAGS) $(ASCENT_VTKM_LIB_FLAGS) $(ASCENT_CONDUIT_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)

# if using Ascent with mpi and/or cuda with a non-GPU sim
ASCENT_MPI_LIB_FLAGS = $(ASCENT_DEVICE_OBJECT_MPI) \
                       -L $(ASCENT_DIR)/lib \
                       -lascent_mpi \
                       -lascent_flow \
                       -lascent_lodepng \
                       -lrover_mpi $(DRAY_LINK_RPATH) $(DRAY_LIB_FLAGS) $(ASCENT_VTKH_MPI_LIB_FLAGS) $(ASCENT_VTKM_LIB_FLAGS) $(ASCENT_CONDUIT_MPI_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)

# if using Ascent with mpi and/or cuda where the linking code
# performs a device link (resolving all cuda symbols)
ASCENT_MPI_CUDA_LIB_FLAGS = -L $(ASCENT_DIR)/lib \
                            -lascent_mpi \
                            -lascent_flow \
                            -lascent_lodepng \
                            -lrover_mpi $(DRAY_LINK_RPATH) $(DRAY_LIB_FLAGS) $(ASCENT_VTKH_MPI_LIB_FLAGS) $(ASCENT_VTKM_LIB_FLAGS) $(ASCENT_CONDUIT_MPI_LIB_FLAGS) $(ASCENT_MFEM_LIB_FLAGS) $(ASCENT_PYTHON_LIBS) $(ASCENT_OPENMP_LINK_FLAGS) $(ASCENT_CUDA_LIB_FLAGS)
